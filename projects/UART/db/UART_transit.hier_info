|UART_transit
bit_in => bit_in.IN1
clk => clk.IN1
reset => reset.IN3
bit_out << UART_transmitter:transmitter.bit_out
led_bus[0] << byte_out2[0].DB_MAX_OUTPUT_PORT_TYPE
led_bus[1] << byte_out2[1].DB_MAX_OUTPUT_PORT_TYPE
led_bus[2] << byte_out2[2].DB_MAX_OUTPUT_PORT_TYPE
led_bus[3] << byte_out2[3].DB_MAX_OUTPUT_PORT_TYPE
led_bus[4] << byte_out2[4].DB_MAX_OUTPUT_PORT_TYPE
led_bus[5] << byte_out2[5].DB_MAX_OUTPUT_PORT_TYPE
led_bus[6] << byte_out2[6].DB_MAX_OUTPUT_PORT_TYPE
led_bus[7] << byte_out2[7].DB_MAX_OUTPUT_PORT_TYPE


|UART_transit|my_pll:pll
areset => areset.IN1
inclk0 => sub_wire1[0].IN1
c0 <= altpll:altpll_component.clk
locked <= altpll:altpll_component.locked


|UART_transit|my_pll:pll|altpll:altpll_component
inclk[0] => my_pll_altpll:auto_generated.inclk[0]
inclk[1] => my_pll_altpll:auto_generated.inclk[1]
fbin => ~NO_FANOUT~
pllena => ~NO_FANOUT~
clkswitch => ~NO_FANOUT~
areset => my_pll_altpll:auto_generated.areset
pfdena => ~NO_FANOUT~
clkena[0] => ~NO_FANOUT~
clkena[1] => ~NO_FANOUT~
clkena[2] => ~NO_FANOUT~
clkena[3] => ~NO_FANOUT~
clkena[4] => ~NO_FANOUT~
clkena[5] => ~NO_FANOUT~
extclkena[0] => ~NO_FANOUT~
extclkena[1] => ~NO_FANOUT~
extclkena[2] => ~NO_FANOUT~
extclkena[3] => ~NO_FANOUT~
scanclk => ~NO_FANOUT~
scanclkena => ~NO_FANOUT~
scanaclr => ~NO_FANOUT~
scanread => ~NO_FANOUT~
scanwrite => ~NO_FANOUT~
scandata => ~NO_FANOUT~
phasecounterselect[0] => ~NO_FANOUT~
phasecounterselect[1] => ~NO_FANOUT~
phasecounterselect[2] => ~NO_FANOUT~
phasecounterselect[3] => ~NO_FANOUT~
phaseupdown => ~NO_FANOUT~
phasestep => ~NO_FANOUT~
configupdate => ~NO_FANOUT~
fbmimicbidir <> <GND>
clk[0] <= clk[0].DB_MAX_OUTPUT_PORT_TYPE
clk[1] <= clk[1].DB_MAX_OUTPUT_PORT_TYPE
clk[2] <= clk[2].DB_MAX_OUTPUT_PORT_TYPE
clk[3] <= clk[3].DB_MAX_OUTPUT_PORT_TYPE
clk[4] <= clk[4].DB_MAX_OUTPUT_PORT_TYPE
extclk[0] <= <GND>
extclk[1] <= <GND>
extclk[2] <= <GND>
extclk[3] <= <GND>
clkbad[0] <= <GND>
clkbad[1] <= <GND>
enable1 <= <GND>
enable0 <= <GND>
activeclock <= <GND>
clkloss <= <GND>
locked <= my_pll_altpll:auto_generated.locked
scandataout <= <GND>
scandone <= <GND>
sclkout0 <= <GND>
sclkout1 <= <GND>
phasedone <= <GND>
vcooverrange <= <GND>
vcounderrange <= <GND>
fbout <= <GND>
fref <= <GND>
icdrclk <= <GND>


|UART_transit|my_pll:pll|altpll:altpll_component|my_pll_altpll:auto_generated
areset => pll_lock_sync.ACLR
areset => pll1.ARESET
clk[0] <= pll1.CLK
clk[1] <= pll1.CLK1
clk[2] <= pll1.CLK2
clk[3] <= pll1.CLK3
clk[4] <= pll1.CLK4
inclk[0] => pll1.CLK
inclk[1] => pll1.CLK1
locked <= locked.DB_MAX_OUTPUT_PORT_TYPE


|UART_transit|UART_reciever:receiver
reset => reset.IN1
clk => clk.IN1
bit_in => bit_in.IN1
byte_out[0] <= shift_reg_serial_in_par_out:shift_reg.byte_out
byte_out[1] <= shift_reg_serial_in_par_out:shift_reg.byte_out
byte_out[2] <= shift_reg_serial_in_par_out:shift_reg.byte_out
byte_out[3] <= shift_reg_serial_in_par_out:shift_reg.byte_out
byte_out[4] <= shift_reg_serial_in_par_out:shift_reg.byte_out
byte_out[5] <= shift_reg_serial_in_par_out:shift_reg.byte_out
byte_out[6] <= shift_reg_serial_in_par_out:shift_reg.byte_out
byte_out[7] <= shift_reg_serial_in_par_out:shift_reg.byte_out
ready_out <= read.DB_MAX_OUTPUT_PORT_TYPE


|UART_transit|UART_reciever:receiver|shift_reg_serial_in_par_out:shift_reg
clk => byte_out[0]~reg0.CLK
clk => byte_out[1]~reg0.CLK
clk => byte_out[2]~reg0.CLK
clk => byte_out[3]~reg0.CLK
clk => byte_out[4]~reg0.CLK
clk => byte_out[5]~reg0.CLK
clk => byte_out[6]~reg0.CLK
clk => byte_out[7]~reg0.CLK
reset => byte_out.OUTPUTSELECT
reset => byte_out.OUTPUTSELECT
reset => byte_out.OUTPUTSELECT
reset => byte_out.OUTPUTSELECT
reset => byte_out.OUTPUTSELECT
reset => byte_out.OUTPUTSELECT
reset => byte_out.OUTPUTSELECT
reset => byte_out.OUTPUTSELECT
bit_in => byte_out.DATAB
shift => byte_out.OUTPUTSELECT
shift => byte_out.OUTPUTSELECT
shift => byte_out.OUTPUTSELECT
shift => byte_out.OUTPUTSELECT
shift => byte_out.OUTPUTSELECT
shift => byte_out.OUTPUTSELECT
shift => byte_out.OUTPUTSELECT
shift => byte_out.OUTPUTSELECT
byte_out[0] <= byte_out[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
byte_out[1] <= byte_out[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
byte_out[2] <= byte_out[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
byte_out[3] <= byte_out[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
byte_out[4] <= byte_out[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
byte_out[5] <= byte_out[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
byte_out[6] <= byte_out[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
byte_out[7] <= byte_out[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|UART_transit|UART_buffer:buffer
clk => ready~reg0.CLK
clk => byte_out[0]~reg0.CLK
clk => byte_out[1]~reg0.CLK
clk => byte_out[2]~reg0.CLK
clk => byte_out[3]~reg0.CLK
clk => byte_out[4]~reg0.CLK
clk => byte_out[5]~reg0.CLK
clk => byte_out[6]~reg0.CLK
clk => byte_out[7]~reg0.CLK
reset => byte_out.OUTPUTSELECT
reset => byte_out.OUTPUTSELECT
reset => byte_out.OUTPUTSELECT
reset => byte_out.OUTPUTSELECT
reset => byte_out.OUTPUTSELECT
reset => byte_out.OUTPUTSELECT
reset => byte_out.OUTPUTSELECT
reset => byte_out.OUTPUTSELECT
reset => ready.OUTPUTSELECT
enable => byte_out.OUTPUTSELECT
enable => byte_out.OUTPUTSELECT
enable => byte_out.OUTPUTSELECT
enable => byte_out.OUTPUTSELECT
enable => byte_out.OUTPUTSELECT
enable => byte_out.OUTPUTSELECT
enable => byte_out.OUTPUTSELECT
enable => byte_out.OUTPUTSELECT
enable => ready.OUTPUTSELECT
byte_in[0] => byte_out.DATAB
byte_in[1] => byte_out.DATAB
byte_in[2] => byte_out.DATAB
byte_in[3] => byte_out.DATAB
byte_in[4] => byte_out.DATAB
byte_in[5] => byte_out.DATAB
byte_in[6] => byte_out.DATAB
byte_in[7] => byte_out.DATAB
byte_out[0] <= byte_out[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
byte_out[1] <= byte_out[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
byte_out[2] <= byte_out[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
byte_out[3] <= byte_out[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
byte_out[4] <= byte_out[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
byte_out[5] <= byte_out[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
byte_out[6] <= byte_out[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
byte_out[7] <= byte_out[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
ready <= ready~reg0.DB_MAX_OUTPUT_PORT_TYPE


|UART_transit|UART_transmitter:transmitter
reset => reset.IN1
clk => clk.IN1
byte_in[0] => byte_in[0].IN1
byte_in[1] => byte_in[1].IN1
byte_in[2] => byte_in[2].IN1
byte_in[3] => byte_in[3].IN1
byte_in[4] => byte_in[4].IN1
byte_in[5] => byte_in[5].IN1
byte_in[6] => byte_in[6].IN1
byte_in[7] => byte_in[7].IN1
enable => set_wire.IN1
enable => always0.IN1
bit_out <= bit_out.DB_MAX_OUTPUT_PORT_TYPE


|UART_transit|UART_transmitter:transmitter|shift_reg_par_in_serial_out:par_in
clk => register[0].CLK
clk => register[1].CLK
clk => register[2].CLK
clk => register[3].CLK
clk => register[4].CLK
clk => register[5].CLK
clk => register[6].CLK
clk => register[7].CLK
reset => register.OUTPUTSELECT
reset => register.OUTPUTSELECT
reset => register.OUTPUTSELECT
reset => register.OUTPUTSELECT
reset => register.OUTPUTSELECT
reset => register.OUTPUTSELECT
reset => register.OUTPUTSELECT
reset => register.OUTPUTSELECT
bus_in[0] => register.DATAB
bus_in[1] => register.DATAB
bus_in[2] => register.DATAB
bus_in[3] => register.DATAB
bus_in[4] => register.DATAB
bus_in[5] => register.DATAB
bus_in[6] => register.DATAB
bus_in[7] => register.DATAB
set => register.OUTPUTSELECT
set => register.OUTPUTSELECT
set => register.OUTPUTSELECT
set => register.OUTPUTSELECT
set => register.OUTPUTSELECT
set => register.OUTPUTSELECT
set => register.OUTPUTSELECT
set => register.OUTPUTSELECT
shift => register.OUTPUTSELECT
shift => register.OUTPUTSELECT
shift => register.OUTPUTSELECT
shift => register.OUTPUTSELECT
shift => register.OUTPUTSELECT
shift => register.OUTPUTSELECT
shift => register.OUTPUTSELECT
shift => register.OUTPUTSELECT
bit_out <= register[0].DB_MAX_OUTPUT_PORT_TYPE


